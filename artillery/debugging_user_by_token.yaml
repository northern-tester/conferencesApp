# Example artillery test for the conference app API
# Run with `artillery run --dotenv ../.env challenge_user_by_token.yaml`
#
# Artillery can do a lot more! Check out the docs at:
#
# https: //docs.art/guides/guides/http-reference

config:
  target: "http://localhost:9000"
  phases:
    - duration: 5
      arrivalRate: 1
      name: Warm up
    - duration: 10
      arrivalRate: 2
      rampTo: 4
      name: Ramp up load
    - duration: 20
      arrivalRate: 4
      name: Sustained load
  variables:
    # Generate some credentials
    email: "{{ $randomString() }}@email.com"
    password: "password{{ $randomNumber(10000,99999) }}"
    master-key: "{{ $processEnvironment.MASTER_KEY }}"

before:
  flow:
    - log: "Create a new user for authentication tests"
    - post:
        url: "/users"
        form:
          access_token: "{{ master-key }}"
          email: "{{ email }}"
          password: "{{ password }}"

scenarios:
  - name: "Authenticate a new user successfully and get the user by token"
    flow:
      - log: "Authenticate the new user {{ email }}"
      - post:
          url: "/auth"
          auth:
            user: "{{ email }}"
            pass: "{{ password }}"
          form:
            access_token: "{{ master-key }}"
          capture:
            # Capture the token for future use
            - json: "$.token"
              as: token
          expect:
            - statusCode: 201
      - think: 5
      - log: "Get the new user by token {{ token }} and check their email"
      - get:
          url: "/users/me"
          form:
            access_token: "{{ token }}"
          capture:
            # Capture the email for future use
            - json: "$.email"
              as: user-email
          expect:
            - statusCode: 200
            - contentType: json
            - hasProperty: email
            - equals:
              - "{{ email }}"
              - "{{ user-email }}"
