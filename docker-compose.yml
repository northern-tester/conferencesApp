version: '2'
services:
  mongo:
    image: mongo:latest
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/data/log
    volumes:
      - ./data/db:/data/db
    ports:
      - 27017:27017
    expose:
      - 27017
    networks:
      - back-tier
    command: mongod

  api:
    build: .
    hostname: 'conferencesapp'
    command: npm start
    ports:
      - 9000:9000
    expose:
      - 9000
    networks:
      - back-tier
    depends_on:
      - mongo

  prometheus:
    image: prom/prometheus:v2.36.2
    hostname: 'prometheus'
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - 9090:9090
    networks:
      - back-tier
    depends_on:
      - cadvisor
    restart: always

  alertmanager:
    image: prom/alertmanager
    hostname: 'alertmanager'
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    restart: always
    networks:
      - back-tier
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yaml'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    restart: always
    networks:
      - back-tier

networks:
  back-tier: {}
